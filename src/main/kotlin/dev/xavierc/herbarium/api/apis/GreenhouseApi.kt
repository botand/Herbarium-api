/**
* Herbarium API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dev.xavierc.herbarium.api.apis

import com.google.gson.Gson
import io.ktor.application.*
import io.ktor.auth.*
import io.ktor.http.*
import io.ktor.response.*
import dev.xavierc.herbarium.api.Paths
import io.ktor.locations.*
import io.ktor.routing.*
import dev.xavierc.herbarium.api.infrastructure.ApiPrincipal
import dev.xavierc.herbarium.api.models.ActuatorState
import dev.xavierc.herbarium.api.models.ApiErrorResponse
import dev.xavierc.herbarium.api.models.Greenhouse
import dev.xavierc.herbarium.api.models.GreenhouseDetails
import dev.xavierc.herbarium.api.models.InlineObject
import dev.xavierc.herbarium.api.models.InlineObject1

@KtorExperimentalLocationsAPI
fun Route.GreenhouseApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    authenticate("oauth") {
    delete<Paths.deleteGreenhouse> {
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        call.respond(HttpStatusCode.NotImplemented)
    }
    }

    authenticate("apiKey") {
    get<Paths.getGreenhouse> {
        val principal = call.authentication.principal<ApiPrincipal>()!!
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "tank_level" : {
                "type" : "M",
                "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "value" : 0.14658129805029452,
                "timestamp" : "2000-01-23T04:56:07.000+00:00"
              },
              "last_timestamp" : "2000-01-23T04:56:07.000+00:00",
              "plants" : [ {
                "light_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "valve_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "last_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "planted_at" : "2000-01-23T04:56:07.000+00:00",
                "position" : 0,
                "type" : {
                  "moisture_goal" : 80.0,
                  "name" : "Tomato",
                  "light_exposure_min_duration" : 14.0,
                  "id" : 6
                },
                "moisture_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "light_strip_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                }
              }, {
                "light_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "valve_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "last_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "planted_at" : "2000-01-23T04:56:07.000+00:00",
                "position" : 0,
                "type" : {
                  "moisture_goal" : 80.0,
                  "name" : "Tomato",
                  "light_exposure_min_duration" : 14.0,
                  "id" : 6
                },
                "moisture_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "light_strip_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                }
              } ],
              "name" : "name",
              "created_at" : "2000-01-23T04:56:07.000+00:00",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
    }
    }

    authenticate("oauth") {
    get<Paths.getGreenhousesOfUser> {
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        val exampleContentType = "application/json"
            val exampleContentString = """{
              "tank_level" : {
                "type" : "M",
                "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "value" : 0.14658129805029452,
                "timestamp" : "2000-01-23T04:56:07.000+00:00"
              },
              "last_timestamp" : "2000-01-23T04:56:07.000+00:00",
              "plants" : [ {
                "light_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "valve_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "last_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "planted_at" : "2000-01-23T04:56:07.000+00:00",
                "position" : 0,
                "type" : {
                  "moisture_goal" : 80.0,
                  "name" : "Tomato",
                  "light_exposure_min_duration" : 14.0,
                  "id" : 6
                },
                "moisture_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "light_strip_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                }
              }, {
                "light_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "valve_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "last_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "planted_at" : "2000-01-23T04:56:07.000+00:00",
                "position" : 0,
                "type" : {
                  "moisture_goal" : 80.0,
                  "name" : "Tomato",
                  "light_exposure_min_duration" : 14.0,
                  "id" : 6
                },
                "moisture_last_reading" : {
                  "type" : "M",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : 0.14658129805029452,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                },
                "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                "light_strip_status" : {
                  "type" : "V",
                  "plant_uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
                  "value" : true,
                  "timestamp" : "2000-01-23T04:56:07.000+00:00"
                }
              } ],
              "name" : "name",
              "created_at" : "2000-01-23T04:56:07.000+00:00",
              "uuid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
            }"""
            
            when (exampleContentType) {
                "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
                "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
                else -> call.respondText(exampleContentString)
            }
    }
    }

    authenticate("oauth") {
    post<Paths.postActuatorState> {
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        call.respond(HttpStatusCode.NotImplemented)
    }
    }

    authenticate("oauth") {
    post<Paths.postGreenhouse> {
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        call.respond(HttpStatusCode.NotImplemented)
    }
    }

    authenticate("apiKey") {
    put<Paths.putData> {
        val principal = call.authentication.principal<ApiPrincipal>()!!
        
        call.respond(HttpStatusCode.NotImplemented)
    }
    }

    authenticate("oauth") {
    put<Paths.putGreenHouse> {
        val principal = call.authentication.principal<OAuthAccessTokenResponse>()!!
        
        call.respond(HttpStatusCode.NotImplemented)
    }
    }

}
